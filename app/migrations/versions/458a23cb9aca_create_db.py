"""create db

Revision ID: 458a23cb9aca
Revises: 
Create Date: 2025-06-03 20:05:28.791644

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '458a23cb9aca'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('item_categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('base_rate', sa.Float(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('locations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('type', sa.Enum('estate', 'village', 'town', 'city', 'county', 'country', 'port', 'hub', 'special_zone', name='locationtype'), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('country_id', sa.Integer(), nullable=True),
    sa.Column('constituency', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('is_border', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['country_id'], ['locations.id'], name=op.f('fk_locations_country_id_locations')),
    sa.ForeignKeyConstraint(['parent_id'], ['locations.id'], name=op.f('fk_locations_parent_id_locations')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('real_name', sa.String(), nullable=True),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('phone_number', sa.Integer(), nullable=True),
    sa.Column('password', sa.String(), nullable=True),
    sa.Column('role', sa.String(), nullable=True),
    sa.Column('profile_type', sa.Enum('customer', 'company', 'admin', name='profiletype'), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('borders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('border_type', sa.Enum('intra_city', 'inter_city', 'inter_county', 'trans_county', 'cross_country', name='bordertype'), nullable=False),
    sa.Column('checkpoint_name', sa.String(), nullable=False),
    sa.Column('status', sa.Enum('open', 'closed', 'restricted', name='borderstatus'), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], name=op.f('fk_borders_location_id_locations')),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('location_id')
    )
    op.create_table('route_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('region_location_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['region_location_id'], ['locations.id'], name=op.f('fk_route_groups_region_location_id_locations')),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('services',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('company_name', sa.String(), nullable=True),
    sa.Column('service_name', sa.String(), nullable=True),
    sa.Column('cost', sa.Integer(), nullable=True),
    sa.Column('license', sa.String(), nullable=True),
    sa.Column('image_url', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_services_user_id_users')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('routes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('origin_location_id', sa.Integer(), nullable=True),
    sa.Column('destination_location_id', sa.Integer(), nullable=True),
    sa.Column('route_group_id', sa.Integer(), nullable=True),
    sa.Column('scope', sa.Enum('intra_city', 'inter_city', 'inter_county', 'trans_county', 'cross_country', name='bordertypert'), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['destination_location_id'], ['locations.id'], name=op.f('fk_routes_destination_location_id_locations')),
    sa.ForeignKeyConstraint(['origin_location_id'], ['locations.id'], name=op.f('fk_routes_origin_location_id_locations')),
    sa.ForeignKeyConstraint(['route_group_id'], ['route_groups.id'], name=op.f('fk_routes_route_group_id_route_groups')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('route_locations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('route_id', sa.Integer(), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('sequence', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], name=op.f('fk_route_locations_location_id_locations')),
    sa.ForeignKeyConstraint(['route_id'], ['routes.id'], name=op.f('fk_route_locations_route_id_routes')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('route_tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('route_id', sa.Integer(), nullable=True),
    sa.Column('tag', sa.String(), nullable=False),
    sa.Column('price_factor', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['route_id'], ['routes.id'], name=op.f('fk_route_tags_route_id_routes')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shipments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('origin_location_id', sa.Integer(), nullable=True),
    sa.Column('destination_location_id', sa.Integer(), nullable=True),
    sa.Column('route_id', sa.Integer(), nullable=True),
    sa.Column('service_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('pending', 'in_transit', 'delivered', name='shipmentstatus'), nullable=False),
    sa.Column('shipment_type', sa.Enum('goods', 'person', name='shipmenttype'), nullable=True),
    sa.Column('shipping_cost', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['destination_location_id'], ['locations.id'], name=op.f('fk_shipments_destination_location_id_locations')),
    sa.ForeignKeyConstraint(['origin_location_id'], ['locations.id'], name=op.f('fk_shipments_origin_location_id_locations')),
    sa.ForeignKeyConstraint(['route_id'], ['routes.id'], name=op.f('fk_shipments_route_id_routes')),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], name=op.f('fk_shipments_service_id_services')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_shipments_user_id_users')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shipping_costs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('route_id', sa.Integer(), nullable=True),
    sa.Column('cost_value', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['route_id'], ['routes.id'], name=op.f('fk_shipping_costs_route_id_routes')),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('route_id')
    )
    op.create_table('drop_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('shipment_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('scheduled', 'in_progress', 'completed', name='droplogstatus'), nullable=False),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['shipment_id'], ['shipments.id'], name=op.f('fk_drop_logs_shipment_id_shipments')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shipment_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('shipment_id', sa.Integer(), nullable=True),
    sa.Column('item_name', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('value', sa.Integer(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['item_categories.id'], name=op.f('fk_shipment_items_category_id_item_categories')),
    sa.ForeignKeyConstraint(['shipment_id'], ['shipments.id'], name=op.f('fk_shipment_items_shipment_id_shipments')),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('shipment_items')
    op.drop_table('drop_logs')
    op.drop_table('shipping_costs')
    op.drop_table('shipments')
    op.drop_table('route_tags')
    op.drop_table('route_locations')
    op.drop_table('routes')
    op.drop_table('services')
    op.drop_table('route_groups')
    op.drop_table('borders')
    op.drop_table('users')
    op.drop_table('locations')
    op.drop_table('item_categories')
    # ### end Alembic commands ###
